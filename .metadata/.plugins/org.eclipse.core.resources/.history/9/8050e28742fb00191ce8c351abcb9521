package user;

import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

import com.grpcproject.User.APIResponse;
import com.grpcproject.User.Empty;
import com.grpcproject.User.LoginRequest;
import com.grpcproject.userGrpc.userImplBase;

import io.grpc.stub.StreamObserver;

public class UserService extends userImplBase {

	@Override
	public void login(LoginRequest request, StreamObserver<APIResponse> responseObserver) {

		System.out.println("Inside login");

		String username = request.getUsername();
		String password = request.getPassword();

		APIResponse.Builder response = APIResponse.newBuilder();
		if (username.equals(password)) {

			String hashedUsernam = hash(username);
			
			// return success message
			System.out.println(username);
			System.out.println(hashedUsernam);
			System.out.println(password);
			response.setResponseCode(0).setResponsemessage("SUCCESSFULLY VERIFIED");

		} else {
			response.setResponseCode(100).setResponsemessage("INVALID PASSWORD");
		}

		responseObserver.onNext(response.build());
		responseObserver.onCompleted();
	}

	private String hash(String str) {
		try {

			MessageDigest md = MessageDigest.getInstance("MD5");
			byte[] messageDigest = md.digest(str.getBytes());
			BigInteger number = new BigInteger(1, messageDigest);
			String hashtext = number.toString(16);

			while (hashtext.length() < 32) {
				hashtext = "0" + hashtext;
			}

			return hashtext;

		} catch (NoSuchAlgorithmException e) {
			throw new RuntimeException(e);
		}
	}

	@Override
	public void logout(Empty request, StreamObserver<APIResponse> responseObserver) {

	}

}
